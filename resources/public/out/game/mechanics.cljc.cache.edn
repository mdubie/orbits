;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name game.mechanics, :imports nil, :requires {common game.common, game.common game.common}, :uses nil, :defs {update-planets {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/mechanics.cljc", :line 108, :column 7, :end-line 108, :end-column 21, :arglists (quote ([planets dt]))}, :name game.mechanics/update-planets, :variadic false, :file "src/game/mechanics.cljc", :end-column 21, :method-params ([planets dt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 2, :fn-var true, :arglists (quote ([planets dt]))}, merge-color {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/mechanics.cljc", :line 36, :column 7, :end-line 36, :end-column 18, :arglists (quote ([c1 m1 c2 m2]))}, :name game.mechanics/merge-color, :variadic false, :file "src/game/mechanics.cljc", :end-column 18, :method-params ([c1 m1 c2 m2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 4, :fn-var true, :arglists (quote ([c1 m1 c2 m2]))}, planet->sun-orthagonality-metric {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/mechanics.cljc", :line 144, :column 7, :end-line 144, :end-column 39, :arglists (quote ([p1 {[vx2 vy2] :v, [ax2 ay2] :a, :as p2}]))}, :name game.mechanics/planet->sun-orthagonality-metric, :variadic false, :file "src/game/mechanics.cljc", :end-column 39, :method-params ([p1 p__24093]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 144, :end-line 144, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p1 {[vx2 vy2] :v, [ax2 ay2] :a, :as p2}]))}, orbital-velocity {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/mechanics.cljc", :line 156, :column 7, :end-line 156, :end-column 23, :arglists (quote ([planets]))}, :name game.mechanics/orbital-velocity, :variadic false, :file "src/game/mechanics.cljc", :end-column 23, :method-params ([planets]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 156, :end-line 156, :max-fixed-arity 1, :fn-var true, :arglists (quote ([planets]))}, planet->orthagonality-metric {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/mechanics.cljc", :line 119, :column 7, :end-line 119, :end-column 35, :arglists (quote ([{[ax ay] :a, [vx vy] :v}]))}, :name game.mechanics/planet->orthagonality-metric, :variadic false, :file "src/game/mechanics.cljc", :end-column 35, :method-params ([p__24073]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{[ax ay] :a, [vx vy] :v}]))}, update-planet-acceleration {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/mechanics.cljc", :line 26, :column 7, :end-line 26, :end-column 33, :arglists (quote ([{:keys [uuid], :as p} planets dt]))}, :name game.mechanics/update-planet-acceleration, :variadic false, :file "src/game/mechanics.cljc", :end-column 33, :method-params ([p__24021 planets dt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [uuid], :as p} planets dt]))}, merge-planets {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/mechanics.cljc", :line 60, :column 7, :end-line 60, :end-column 20, :arglists (quote ([{m1 :mass, r1 :r, [vx1 vy1] :v, :as p1} {m2 :mass, r2 :r, [vx2 vy2] :v, :as p2}]))}, :name game.mechanics/merge-planets, :variadic false, :file "src/game/mechanics.cljc", :end-column 20, :method-params ([p__24036 p__24037]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{m1 :mass, r1 :r, [vx1 vy1] :v, :as p1} {m2 :mass, r2 :r, [vx2 vy2] :v, :as p2}]))}, planet-manual-acceleration {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/mechanics.cljc", :line 129, :column 7, :end-line 129, :end-column 33, :arglists (quote ([{[vx vy] :v, :as p}]))}, :name game.mechanics/planet-manual-acceleration, :variadic false, :file "src/game/mechanics.cljc", :end-column 33, :method-params ([p__24082]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{[vx vy] :v, :as p}]))}, planets->collided-planets {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/mechanics.cljc", :line 87, :column 7, :end-line 87, :end-column 32, :arglists (quote ([planets])), :doc "Takes all the planets and returns only those that have collided"}, :name game.mechanics/planets->collided-planets, :variadic false, :file "src/game/mechanics.cljc", :end-column 32, :method-params ([planets]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 1, :fn-var true, :arglists (quote ([planets])), :doc "Takes all the planets and returns only those that have collided"}, update-manual-planet-acceleration {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/mechanics.cljc", :line 137, :column 7, :end-line 137, :end-column 40, :arglists (quote ([p]))}, :name game.mechanics/update-manual-planet-acceleration, :variadic false, :file "src/game/mechanics.cljc", :end-column 40, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p]))}, merge-colors {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/mechanics.cljc", :line 51, :column 7, :end-line 51, :end-column 19, :arglists (quote ([{m1 :mass, colors1 :colors} {m2 :mass, colors2 :colors}]))}, :name game.mechanics/merge-colors, :variadic false, :file "src/game/mechanics.cljc", :end-column 19, :method-params ([p__24026 p__24027]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{m1 :mass, colors1 :colors} {m2 :mass, colors2 :colors}]))}, update-planet-velocity {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/mechanics.cljc", :line 18, :column 7, :end-line 18, :end-column 29, :arglists (quote ([{:keys [a], :as planet} dt]))}, :name game.mechanics/update-planet-velocity, :variadic false, :file "src/game/mechanics.cljc", :end-column 29, :method-params ([p__24006 dt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [a], :as planet} dt]))}, update-planet-position {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/mechanics.cljc", :line 7, :column 7, :end-line 7, :end-column 29, :arglists (quote ([{:keys [v s], :as planet} dt]))}, :name game.mechanics/update-planet-position, :variadic false, :file "src/game/mechanics.cljc", :end-column 29, :method-params ([p__23993 dt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [v s], :as planet} dt]))}, handle-collisions {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/mechanics.cljc", :line 99, :column 7, :end-line 99, :end-column 24, :arglists (quote ([planets]))}, :name game.mechanics/handle-collisions, :variadic false, :file "src/game/mechanics.cljc", :end-column 24, :method-params ([planets]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([planets]))}, planets->remaining-planets {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/mechanics.cljc", :line 75, :column 7, :end-line 75, :end-column 33, :arglists (quote ([[{m1 :mass, uuid1 :uuid, :as p1} {m2 :mass, uuid2 :uuid, :as p2}] planets]))}, :name game.mechanics/planets->remaining-planets, :variadic false, :file "src/game/mechanics.cljc", :end-column 33, :method-params ([p__24051 planets]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[{m1 :mass, uuid1 :uuid, :as p1} {m2 :mass, uuid2 :uuid, :as p2}] planets]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:path :gradient-magnitude :gradient-direction :mass :r :v :colors :s :uuid :a}, :order [:v :s :path :a :uuid :mass :colors :r :gradient-magnitude :gradient-direction]}, :doc nil}