;; Analyzed by ClojureScript 1.7.122
{:use-macros {go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name game.core, :imports nil, :requires {mechanics game.mechanics, game.mechanics game.mechanics, initial-system game.initial-system, game.initial-system game.initial-system, paint game.paint, game.paint game.paint, a cljs.core.async, cljs.core.async cljs.core.async}, :uses nil, :defs {init-state! {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/core.cljs", :line 25, :column 7, :end-line 25, :end-column 18, :arglists (quote ([]))}, :name game.core/init-state!, :variadic false, :file "src/game/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, make-redraw-chan {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/core.cljs", :line 66, :column 7, :end-line 66, :end-column 23, :arglists (quote ([]))}, :name game.core/make-redraw-chan, :variadic false, :file "src/game/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/core.cljs", :line 93, :column 7, :end-line 93, :end-column 11, :arglists (quote ([]))}, :name game.core/init, :variadic false, :file "src/game/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, time-now {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/core.cljs", :line 21, :column 7, :end-line 21, :end-column 15, :arglists (quote ([]))}, :name game.core/time-now, :variadic false, :file "src/game/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, gravity-chan {:name game.core/gravity-chan, :file "src/game/core.cljs", :line 41, :column 1, :end-line 41, :end-column 18, :meta {:file "/Users/mdubie/Developer/orbits/src/game/core.cljs", :line 41, :column 6, :end-line 41, :end-column 18}}, go-go-draw! {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/core.cljs", :line 76, :column 7, :end-line 76, :end-column 18, :arglists (quote ([]))}, :name game.core/go-go-draw!, :variadic false, :file "src/game/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, $ {:name game.core/$, :file "src/game/core.cljs", :line 12, :column 1, :end-line 12, :end-column 7, :meta {:file "/Users/mdubie/Developer/orbits/src/game/core.cljs", :line 12, :column 6, :end-line 12, :end-column 7}}, state {:name game.core/state, :file "src/game/core.cljs", :line 18, :column 1, :end-line 18, :end-column 11, :meta {:file "/Users/mdubie/Developer/orbits/src/game/core.cljs", :line 18, :column 6, :end-line 18, :end-column 11}}, apply-gravity! {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/core.cljs", :line 43, :column 7, :end-line 43, :end-column 21, :arglists (quote ([]))}, :name game.core/apply-gravity!, :variadic false, :file "src/game/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, go-go-gravity! {:protocol-inline nil, :meta {:file "/Users/mdubie/Developer/orbits/src/game/core.cljs", :line 55, :column 7, :end-line 55, :end-column 21, :arglists (quote ([]))}, :name game.core/go-go-gravity!, :variadic false, :file "src/game/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:planets :else :t0 :dt :width :recur :t-calc1 :t-draw0 :game-speed :t-calc0 :canvas-size :t-draw1 :height}, :order [:game-speed :t0 :canvas-size :planets :width :height :dt :t-calc0 :t-calc1 :recur :else :t-draw0 :t-draw1]}, :doc nil}